loop={}
loop.name="loop"
loop.argv="[IP] [PORT] [MEM] [VULN] [IP/PASS]"
loop.desc="Loops over an exploit, open Map.exe to stop."
loop.full_desc="This command will loop over an exploit, where [IP] is the target IP,\n where [PORT] is the target port,\n where [MEM] is the memory address,\n where [VULN] is the vulnerable string,\n where [IP/PASS] is the IP for a bounce attack or a new password to inject."
loop.handler_types=["start","shell","computer","file"]
loop.run=function(object,argv)
  if not argv or argv.len<=4 then return self.show_help
  object=null
  if argv.len==5 then extra=argv.pop else extra="."
  vulnString=argv.pop
  memAddress=argv.pop
  PORT=argv.pop.to_int
  IP=argv.pop
  mapCheck=1
  netSession=main_session.MetaxploitLib.net_use(IP,PORT)
  while mapCheck<2 and object==null
    mapCheck=get_shell.host_computer.show_procs.split("Map").len
    if not netSession then return print("Could not connect to port: "+PORT)
    object=netSession.dump_lib.overflow(memAddress,vulnString,extra)
    objectType=typeof(object)
    if objectType=="shell" then
      localIP=object.host_computer.local_ip
      user=userCheck(object.host_computer.File("/var"))
    else if objectType=="computer" then
      localIP=object.local_ip
      user=userCheck(object.File("/var"))
    else if objectType=="file" then
      user=userCheck(object)
      router=get_router(IP)
      if router and not is_lan_ip(IP) then
        if PORT==0 or PORT==8080 then
          localIP=router.local_ip
          ip=router.public_ip
        else
          for port in router.used_ports
            if port.port_number==PORT then
              localIP=port.get_lan_ip
              break
            end if
          end for
        end if
      else if IP then
        localIP=IP
        ip=main_session.MetaxploitLibPublicIP
      else
        localIP=main_session.MetaxploitLibLocalIP
        ip=main_session.MetaxploitLibPublicIP
      end if
    end if
    wait(0.01)
  end while
  if object==null or objectType=="number" then return
  main_session.objectList[main_session.objectList.len]={"IP":IP,"objectType":objectType,"object":object,"localIP":localIP,"user":user}
end function
loop.show_help=function
  show_help(self.name,self.argv,self.full_desc,self.handler_types)
end function