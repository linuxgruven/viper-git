exploit={}
exploit.name="exploit"
exploit.args="[IP/LIB] (PORT) [MEM] [VULN] (IP/PASS)"
exploit.desc="Exploits a target library or service."
exploit.full_desc="This command will exploit a target library or service,\n where [IP/LIB] is the IP or library to exploit,\n where (PORT) is the port of the service (not used when exploiting a library),\n where [MEM] is the memory address,\n where [VULN] is the vulnerable string,\n where (IP/PASS) is a local IP for a bounce exploit or PASS to inject a new password."
exploit.handler_types=["start","shell","computer","file"]
exploit.run=function(_,argv)
  if not argv or argv.len<3 then return self.show_help
  localIP="unknown"
  if is_valid_ip(argv[0]) and argv.len>3 then
    extra="."
    if argv.len==5 then extra=argv.pop
    vulnString=argv.pop
    memAddress=argv.pop
    PORT=argv.pop.to_int
    IP=argv.pop
    netSession=main_session.MetaxploitLib.net_use(IP,PORT)
    if not netSession then return print("Could not connect to port: "+PORT)
    object=netSession.dump_lib.overflow(memAddress,vulnString,extra)
    objectType=typeof(object)
    if not object then return print("Exploit not found!")
    if objectType=="shell" then
      localIP=object.host_computer.local_ip
      IP=object.host_computer.public_ip
      user=userCheck(object.host_computer.File("/var"))
    else if objectType=="computer" then
      localIP=object.local_ip
      IP=object.public_ip
      user=userCheck(object.File("/var"))
    else if objectType=="file" then
      user=userCheck(object)
      router=get_router(IP)
      if router and not is_lan_ip(IP) then
        if PORT==0 or PORT==8080 then
          localIP=router.local_ip
          IP=router.public_ip
        else
          for port in router.used_ports
            if port.port_number==PORT then
              localIP=port.get_lan_ip
              break
            end if
          end for
        end if
      else if IP then
          localIP=IP
          ip=main_session.MetaxploitLibPublicIP
      else
          localIP=main_session.MetaxploitLibLocalIP
          ip=main_session.MetaxploitLibPublicIP
      end if
    end if
  else
    extra="."
    if argv.len==4 then extra=argv.pop
    vulnString=argv.pop
    memAddress=argv.pop
    library=argv.pop
    metalib=main_session.MetaxploitLib.load("/lib/"+library)
    if not metalib then return print("Could not load library: "+library)
    object=metalib.overflow(memAddress,vulnString,extra)
    objectType=typeof(object)
    if not object then return print("Exploit not found!")
    if objectType=="shell" then
      IP=object.host_computer.public_ip
      localIP=object.host_computer.local_ip
      user=userCheck(object.host_computer.File("/var"))
    else if objectType=="computer" then
      IP=object.public_ip
      localIP=object.local_ip
      user=userCheck(object.File("/var"))
    else if objectType=="file" then
      IP=main_session.MetaxploitLibPublicIP
      localIP=main_session.MetaxploitLibLocalIP
      user=userCheck(object)
    end if
  end if
  if not object then
    return print("Object not found!")
  else if objectType isa string then
    return print(object)
  else if objectType isa number then
      return
  end if
  main_session.objectList[main_session.objectList.len]={"IP":IP,"objectType":objectType,"object":object,"localIP":localIP,"user":user}
end function
exploit.show_help=function
  show_help(self.name,self.args,self.full_desc,self.handler_types)
end function