aptget={}
aptget.name="apt-get"
aptget.args="[N/A]"
aptget.desc="Apt client."
aptget.full_desc="This command will start the apt-get client."
aptget.handler_types=["start","shell","computer","file"]
aptget.run=function(object,args)
	if not main_session.aptclientLib then return print("aptclient.so not found!")
	PendingUpdating=function(folderPath)
		pendingUpdate=[]
		targetFolder=object.host_computer.File(folderPath)
		if targetFolder!=null then
			files=targetFolder.get_files
			for itemFile in files
				if main_session.aptclientLib.check_upgrade(itemFile.path)==true then pendingUpdate.push(itemFile.name)
			end for
		end if
		return pendingUpdate
	end function 
	if not argv or argv.len>3 then return print(command_info("apt-get_usage"))
	action=argv.pop
	if action=="update" then
		print("Updating package lists...")
		output=main_session.aptclientLib.update
		if output then print(output)
	else if action=="install" then
		print("Reading package lists...")
		if not argv then return print(command_info("apt-get_usage"))
		package=argv.pop
		print("Downloading "+package)
		output=main_session.aptclientLib.install(package)
		if output==true then return print(package+" installed")
		print(output)
	else if action=="search" then
		if not argv then return print(command_info("apt-get_usage"))
		print(main_session.aptclientLib.search(argv.pop))
	else if action=="show" then
		if not argv then return print(command_info("apt-get_usage"))
		print(main_session.aptclientLib.show(argv.pop))
	else if action=="addrepo" then
		if argv.len!=1 then return print(command_info("apt-get_usage"))
		if argv.len==2 then port=to_int(argv.pop) else port=1542
		repo=argv.pop
		output=main_session.aptclientLib.add_repo(repo,port)
		if output then return print(output)
		print("Repository "+repo+" added succesfully.\nLaunch apt with the update option to apply the changes")
	else if action=="delrepo" then
		if not argv then return print(command_info("apt-get_usage"))
		repo=argv.pop
		output=main_session.aptclientLib.del_repo(repo)
		if output then return print(output)
		print("Repository "+repo+" removed succesfully.\nLaunch apt with the update option to apply the changes")
	else if action=="upgrade" then
		print("Reading package lists...")
		if argv then
			pendingPackages=PendingUpdating("/lib")+PendingUpdating("/bin")
			if not pendingPackages then return print("No updates needed")
			print("The following packages will be updated:")
			pkgs=""
			for itemPackage in pendingPackages
				pkgs=pkgs+" "+itemPackage
			end for
			print(pkgs)
			option=user_input("\nDo you want to continue?(y/n): ")
			if option=="y" or option=="yes" then
				counter=0
				for itemPackage in pendingPackages
					output=main_session.aptclientLib.install(itemPackage)
					if output==true then
						counter=counter+1
					else if output then
						print(output)
					end if
				end for
				print(counter+" packages updated")
			else 
				print("aborted")
			end if
		else if argv then
			package=argv.pop
			output=main_session.aptclientLib.check_upgrade(package)
			if not output then return print("No updates needed")
			if output==true then
				print("The following package will be updated:\n"+package)
				option=user_input("\nDo you want to continue?(y/n): ")
				if option=="y" or option=="yes" then
					output=main_session.aptclientLib.install(package)
					if output==true then print(package+" installed.")
					print(output)
				else
					print("aborted")
				end if
			else
				print(output)
			end if
		end if
	else
		print(command_info("apt-get_usage"))
	end if
end function
aptget.show_help=function
  show_help(self.name,self.args,self.full_desc,self.handler_types)
end function